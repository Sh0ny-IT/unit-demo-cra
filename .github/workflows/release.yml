name: Create Release Branch and Run Tests
on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  # создать ветку release-<номер ветки>
  create-release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release Branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release-${{ github.ref_name }}'
# запустить тесты
  run-tests:
    name: Run Tests
    needs: create-release-branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test-ci

      - name: Save test report
        run: |
          mkdir -p shared-results
          cp test-report.html shared-results/test-report.html

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: shared-results/test-report.html
# создать issue с результатами тестов
create-release-issue:
  runs-on: ubuntu-latest
  needs: run_tests
  permissions: write-all
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/download-artifact@v3
      with:
        name: result_url

    - name: Pull url to env variable
      shell: bash
      run: echo "TEST_RESULTS=$(cat test_result_url.txt)" >> $GITHUB_ENV

    - name: Get previous tag
      shell: bash
      id: previous-tag
      run: echo "::set-output name=previous-tag::$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))"

    - name: Create changelog with hotfixes
      uses: nielstenboom/semantic-changelog-generator@v1.2.0
      id: changelog
      with:
        base: ${{ steps.previous-tag.outputs.previous-tag }}
        head: ${{ github.ref_name }}

    - name: Create or update release issue
      id: create-release-issue
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CHANGELOG: ${{ steps.changelog.outputs.changelog }}
      with:
        update_existing: true
        search_existing: all


  create-release-tag:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Git Identity
        run: |
          git config user.email "you@example.com"
          git config user.name "Your Name"

      - name: Create Release Tag
        run: |
          git tag -a v${{ github.run_number }} -m "Release ${{ github.run_number }}"
          git push origin --tags

  build:
    needs: create-release-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: 'Release ${{ github.run_number }}'
          draft: false
          prerelease: false
