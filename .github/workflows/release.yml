name: 2-Create Release Branch and Run Tests
on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release Branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release-${{ github.ref_name }}'

  run-tests:
    name: Run Tests
    needs: create-release-branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test-ci

      - name: Save test report
        run: |
          mkdir -p shared-results
          cp test-report.html shared-results/test-report.html

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: shared-results/test-report.html

  create-release-issue:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare issue content
        id: prepare_issue_content
        run: |
          echo "Test report is available as an artifact in this workflow run." > test_report_link.txt

      - name: Create Release Issue
        id: create-release-issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const testReport = '${{ steps.prepare_issue_content.outputs.report }}';
            const title = `Test Report for Release ${process.env.GITHUB_RUN_NUMBER}`
            let body = '';
            body += `Author: ${context.payload.sender.login}\n`
            body += `Date: ${new Date().toLocaleString()}\n`
            body += `Version: ${process.env.GITHUB_RUN_NUMBER}\n\n`
            body += `Test Report: ${testReport}\n`
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              assignees: [context.payload.sender.login],
              labels: ['test', 'report']
            })

      - name: Write issue id in file
        id: write-issue-id
        shell: bash
        run: |
          echo "${{ steps.create-release-issue.outputs.number }}" > issue_id.txt

      - name: Save release issue id for use in other workflows
        uses: actions/upload-artifact@v2
        with:
          name: issue_id
          path: issue_id.txt

  create-release-tag:
    needs: create-release-issue
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: 'Release ${{ github.run_number }}'
          draft: false
          prerelease: false

  build-and-deploy:
    needs: create-release-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          npm ci
          PUBLIC_URL="/shri-unit-demo-cra" npm run build

      - name: Deploy to gh-pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: build
          clean: true
          commit-message: 'Deploying to gh-pages from build job'
