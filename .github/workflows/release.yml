name: Create Release Branch and Run Tests
on: [workflow_dispatch, push]
jobs:
  create-release-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create Release Branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release-${{ github.ref_name }}'

  run-tests:
    name: Run Tests
    needs: create-release-branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test-ci

      - name: Save test report
        run: |
          mkdir -p shared-results
          cp test-report.html shared-results/test-report.html

  create-release-issue:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - uses: actions/checkout@v3

      - name: Pull test report to env variable
        shell: bash
        run: echo "TEST_REPORT=$(cat shared-results/test-report.html)" >> $GITHUB_ENV

      - name: Create or update release issue
        id: create-release-issue
        uses: JasonEtco/create-an-issue@v2.9.1
        env:
          TAG_NAME: ${{ env.GITHUB_REF_NAME }}
          ACTOR: ${{ env.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          update_existing: true
          search_existing: all

      - name: Write issue id in file
        id: write-issue-id
        shell: bash
        run: |
          echo "${{ steps.create-release-issue.outputs.number }}" > ${{ env.GITHUB_REF_NAME }}.txt
      - name: Save release issue id for use in other workflows
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.GITHUB_REF_NAME }}
          path: ${{ env.GITHUB_REF_NAME }}.txt

  build:
    name: Create Release
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GITHUB_REF_NAME }}
          release_name: 'Release ${{ env.GITHUB_REF_NAME }}'
          draft: false
          prerelease: false

